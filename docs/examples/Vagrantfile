#  use_ip = '172.20.20.71'
if ENV['FIRST_PROVISION']
  use_ip = "172.20.20.9"
  $script = <<SCRIPT
  apt-get update
  apt-get install curl -y
  echo #{use_ip} registry-api | tee -a /etc/hosts
SCRIPT
else
  $script = <<SCRIPT
  echo NOOP
SCRIPT
end

Vagrant.configure("2") do |c|

  c.vm.define "provisioner" do |ne|
    ne.vm.box = "opscode-ubuntu-12.04"
    ne.vm.box_url = "https://opscode-vm-bento.s3.amazonaws.com/vagrant/virtualbox/opscode_ubuntu-12.04_chef-provisionerless.box"
    ne.vm.hostname = "target.vagrantup.com"
    ne.vm.synced_folder "../../.", "/vagrant"
    ne.vm.network(:private_network, {:ip=>"172.20.20.9"})
    #ne.vm.network(:private_network, {:ip=>"172.20.20.71"})
    ne.vm.provider :virtualbox do |p|
      p.customize ["modifyvm", :id, "--memory", "1024"]
    end
  end

  c.vm.define "app-recipe" do |one|
    one.vm.box = "opscode-ubuntu-12.04"
    one.vm.hostname = "app-recipe.vagrantup.com"
    one.vm.synced_folder ".", "/vagrant", disabled: true
    one.vm.network(:private_network, {:ip=>"172.20.20.72"})
    one.vm.provider :virtualbox do |p|
      p.customize ["modifyvm", :id, "--memory", "256"]
    end
  end

  c.vm.define "lb" do |two|
    two.vm.box = "opscode-ubuntu-12.04"
    two.vm.hostname = "lb.vagrantup.com"
    two.vm.synced_folder ".", "/vagrant"
    two.vm.network(:private_network, {:ip=>"172.20.20.73"})
    two.vm.provision "shell", inline: $script
    two.vm.provision "shell", inline: "/vagrant/register_with_api lb_server" unless ENV['FIRST_PROVISION']
    two.vm.provider :virtualbox do |p|
      p.customize ["modifyvm", :id, "--memory", "256"]
    end
  end

  c.vm.define "app" do |three|
    three.vm.box = "opscode-ubuntu-12.04"
    three.vm.hostname = "app.vagrantup.com"
    three.vm.synced_folder ".", "/vagrant"
    three.vm.network(:private_network, {:ip=>"172.20.20.74"})
    three.vm.provision "shell", inline: $script
    three.vm.provision "shell", inline: "/vagrant/register_with_api app_server" unless ENV['FIRST_PROVISION']
    three.vm.provider :virtualbox do |p|
      p.customize ["modifyvm", :id, "--memory", "256"]
    end
  end

  c.vm.define "db" do |four|
    four.vm.box = "opscode-ubuntu-12.04"
    four.vm.hostname = "db.vagrantup.com"
    four.vm.synced_folder ".", "/vagrant"
    four.vm.network(:private_network, {:ip=>"172.20.20.75"})
    four.vm.provision "shell", inline: $script
    four.vm.provision "shell", inline: "/vagrant/register_with_api db_server" unless ENV['FIRST_PROVISION']
    four.vm.provider :virtualbox do |p|
      p.customize ["modifyvm", :id, "--memory", "1024"]
    end
  end

  c.vm.define "cache" do |five|
    five.vm.box = "opscode-ubuntu-12.04"
    five.vm.hostname = "cache.vagrantup.com"
    five.vm.synced_folder ".", "/vagrant"
    five.vm.network(:private_network, {:ip=>"172.20.20.76"})
    five.vm.provision "shell", inline: $script
    five.vm.provision "shell", inline: "/vagrant/register_with_api cache_server" unless ENV['FIRST_PROVISION']
    five.vm.provider :virtualbox do |p|
      p.customize ["modifyvm", :id, "--memory", "512"]
    end
  end

end
